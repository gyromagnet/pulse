/* hnco_3c_pfg_lek_600_sh_cp

 HNCO pulse scheme that makes use of shared constant-time in 15N dimension (t2) if 
   t2,max exceeds 2*Tn ; acq time in t2 can be as long as desired

 modified by LEK to include ph26...ph29
 Usage -Df1180

 Modified by LEK on Nov 19, 2015 to make CP compatible
 Modified by LEK on July 7. 2021 to add +/- cycle to Ca 180 in middle of CO evolution (noticed phase distortion of sidechain COs)

*/

#include <Avance.incl>
#include <Grad.incl>
#include <Delay.incl>

;aqseq 321

;Define phases
#define zero ph=0.0
#define one ph=90.0
#define two ph=180.0
#define three ph=270.0

;Define Pulses
define pulse pwh
       "pwh=p1"
define pulse pw_sl
       "pw_sl=p13"
define pulse pwmlev
       "pwmlev=p12"
define pulse pwn
       "pwn=p3"
define pulse pwco90  ; B1=offset/sqrt15
       "pwco90=p21"  ; on res 
define pulse pwca180 ; B1=offset/sqrt3
       "pwca180=p22" ; off res 17812
define pulse pwco180 ; B1=offset/sqrt3
       "pwco180=p22" ; on res
define pulse pwcadec
       "pwcadec=p23"

;Define delays
"d11=30m"
"in0=inf1/2"
"in10=inf2/2"

define delay tau1

define delay taua
 "taua = d20" 

define delay zeta
 "zeta = d21"

define delay bigTN
  "bigTN = d22"

define delay BigT1
 "BigT1 = d14"

define delay hscuba
  "hscuba = 25m"

;Define flags
;define f1180  ; set zgoptns -Df1180

#ifdef F1c180
 "d0 = 0.2u"
#else
#ifdef f1180
 "d0=(in0 - pwco90*4/3.141 - pwn*2 - 4u - pwca180)/2"
#else
 "d0=(0.2u - pwco90*4/3.141 - pwn*2 - 4u - pwca180)/2"
#endif
#endif

;define f2180   set zgoptns -Df2180
#ifdef f2180
 "d10=(in10/2)"
#else
 "d10=0.1u"
#endif

;define F1c180  set zgoptns -DF1c180 to test 1d and to run NH plane

;"acqt0=0"

#ifndef OneDarray
define loopcounter ni
       " ni = td1/2"
define loopcounter ni2
       " ni2 = td2/2"
#endif

;baseopt_echo

/* Assign cnsts to check validity of parameter range */
#ifdef fsat
  "cnst10=plw10" ; tsatpwr - set max at 0.00005W
#endif
  "cnst13=spw13" ; tpwrsl - set max at 0.00065W"
  "cnst12=plw12" ; tpwrml - set max at 2.5W"
  "cnst21=plw21" ; dhpwr - set max at 11.0W
  "cnst22=plw22" ; dvhpwr - set max at 52.0W
  "cnst23=plw23" ; dpwrcadec - set max at 6.0W
  "cnst31=plw31" ; dpwr2 - set max at 6.0W

/* BEGIN ACTUAL PULSE SEQUENCE */

1 ze

; check validity of parameters

  if "d0 < 0.1u "
  {
   2u
   print "warning: tau1 is negative - First t1 point will be incorrect must LP "
  }

  if "d10 < 0.1u "
  {
   print "error: d10 is too small, check parameters  "
   goto HaltAcqu
  }

#ifdef fsat
if "cnst10 > 0.00005"
{
   2u
   print "error: tsatpwr pl10 too large"
   goto HaltAcqu
 }
#endif

  if "cnst13 > 0.00065"
  {
   2u
   print "error: tpwrsl pl13 incorrect"
   goto HaltAcqu
  }

  if "cnst12 > 1.5"
  {
   2u
   print "error: tpwrml pl12 incorrect"
   goto HaltAcqu
  }

  if "cnst21 > 8.0"
  {
   2u
   print "error: dhpwr pl21 incorrect"
   goto HaltAcqu
  }

  if "cnst22 > 40.0"
  {
   2u
   print "error: dvhpwr pl22 incorrect"
   goto HaltAcqu
  }

  if "cnst23 > 2.0"
  {
   2u
   print "error: dpwrcadec pl23 incorrect"
   goto HaltAcqu
  }

  if "cnst31 > 4.0"
  {
   2u
   print "error: dpwr2 pl31 incorrect"
   goto HaltAcqu
  }

2 d11 do:f3

#ifdef fsat                           /* zgoptn -Dfsat */
  4u pl10:f1                          ; power(tsatpwr) for presaturation
  d1 cw:f1 zero                       ; Hcw(d1)x
  4u do:f1                            ; cw off
  2u pl1:f1                           ; power(tpwr)

#ifdef fscuba                   /* Scuba pulse sequence */
   hscuba                          ; delay(hscuba)
    (pwh zero):f1                  ; H 90x180y90x
    (pwh*2 one):f1
    (pwh zero):f1
   hscuba                          ; delay(hscuba)
#endif                           /* end fscuba */

#else                             /* if fsat is no */
 2u pl1:f1                        ; power(tpwr)
 d1                               ; delay(d1)
#endif                            /* end if fsat */

  2u pl3:f3
  2u pl1:f1   

; destroy 15N Boltzman magnetization
  (pwn zero):f3  
  20u UNBLKGRAD

  2u
  (p50:gp0)
  d16

; This is the real start

"tau1 = d0"

if "tau1 < 0.2u" {
   "tau1 = 0.2u"
}

  (pwh zero):f1                            ; H90x

  2u
  p51:gp1                                  ; gradient 1
  d16

  "DELTA = taua - 2.0u - p51 - d16"
   DELTA                             ; dly 1/4JNH

  (center (pwh*2 ph26):f1 (pwn*2 ph26):f3) ; H180xN180x

   DELTA                             ; dly 1/4JNH

  2u
  p51:gp1                                  ; gradient 1
  d16

  (pwh one):f1                             ; H90(ph2)
  /* shaped pulse */
  2u 
  (pw_sl:sp13 zero):f1                     ; pw_sl at power spw13
  2u pl12:f1                               ; set power at pl12 for 1H waltz16
  /* shaped pulse */

  2u
  p52:gp2                                  ; gradient 2
  d16  pl22:f2                             ; power pl22  for pwco180                 

  (pwn ph3):f3                                 ; N90(ph3)

  5.5m                                         ; dly 1/2JNH
  (pwmlev one):f1                              ; H90y at power pl12
  /* Turn ON 1H Waltz dec */
  (2u cpds1 zero):f1                           ;  1H waltz16x ON

  "DELTA = zeta - 5.5m - pwmlev - 2u"
   DELTA                                       ; dly 1/4JNCO

  (center(pwn*2 ph26):f3 (pwco180 ph26):f2)   ; N180x,CO180x
  
  "DELTA = zeta"
   DELTA                                        ; dly 1/4JNCO

  (pwn zero):f3                                ; N90x

  /* Turn OFF 1H Waltz dec */
  2u do:f1                                     ; 1H waltz16 OFF
  /* Waltz dec off */
  (pwmlev three):f1                            ; H90-y at pl12

  2u
  p53:gp3                                  ; gradient 3
  d16 

; start of CO evolution period (t1)

  2u pl21:f2
  (pwco90 ph4):f2                       ; CO90(ph4)

#ifdef F1c180           ;if f1c180='y'
  2u
  2u
  (pwco90*2 zero):f2    ; CO180x
  2u      
  2u 
#else                   ; end f1c180='y'
 tau1                                   ; t1/2
  (pwn*2 zero):f3                      ; N180x
  /* offresonance Ca 180 */
  2u     
  (pwca180:sp22 ph8):f2                 ; CA180x at power spw22
  2u pl21:f2                           ; set power back at pl21 for pwco90
 tau1                                   ; t1/2
#endif
  (pwco90 zero):f2                     ; CO90x
; end of CO evolution period

  2u
  p54:gp4  
  d16 

  2u pl12:f1
  (pwmlev one):f1                           ; H90y at pl12
  /* Turn ON 1H Waltz16 decoupling */
  (2u cpds1 zero):f1                        ; H waltz16x ON

  /* Turn ON CA seduce decoupling */
  2u pl23:f2
  (2u cpds2 zero):f2                        ; cos mod CA dec ON

if "bigTN - d10 > 0.2u" {

  (pwn ph5):f3                                ; N90(ph5)

  "DELTA = bigTN - d10"             ; dly 1/(4JNCO) - t2/2
  DELTA

  2u do:f2                                    ; CA dec  OFF
  2u pl22:f2

  (pwn*2 ph6):f3
  1u 
  (pwco180 ph26):f2                           ;N180(ph6),CO180x

  ;Turn on CA dec                           
  2u pl23:f2
  (2u cpds2 zero):f2                          ; CA dec ON

  "DELTA=bigTN + 2u + 2u - 1u - pwco180 - 2u - 2u + d10 - 5.5m"       ; dly 1/(4JNCO) - 1/(2JNH)
  DELTA
 }
else {
  (pwn ph5):f3                                ; N90(ph5)
   1u
  (pwn*2 ph6):f3

  "DELTA = d10 - bigTN"             ; dly 1/(4JNCO) - t2/2
  DELTA

  2u do:f2                                    ; CA dec  OFF
  2u pl22:f2

  (pwco180 ph26):f2                           ;N180(ph6),CO180x

  ;Turn on CA dec                           
  2u pl23:f2
  (2u cpds2 zero):f2                          ; CA dec ON

  "DELTA=bigTN + 1u - 2u - 2u - pwco180 - 2u - 2u + d10 - 5.5m"       ; dly 1/(4JNCO) - 1/(2JNH)
  DELTA
 }
0.2u

  /* Turn OFF 1H decoupling */
  2u do:f1                                    ; H waltz16 OFF
  (pwmlev three):f1                           ; H90-y at pl12

  "DELTA = 5.5m - 0.2u - 2u - pwmlev - 2u - 2u - 2u - p55 - 1.0m - 2u"      
  DELTA

  /* Turn OFF CA decoupling */
  2u do:f2                                    ; CA dec OFF
  2u pl21:f2

  2u
  p55:gp5                         ; gradient5 coherence selection 
  1m
  2u pl1:f1

  (center (pwh ph26):f1 (pwn ph7):f3)         ; H90x,N90(ph7)
  (pwco90 zero):f2

  2u
  p56:gp6                                       ; gradient 6
  d16

 "DELTA = taua - pwco90 - 2.0u - p56 - d16"               ; dly 1/4JNH
  DELTA

  (center (pwh*2 ph26):f1 (pwn*2 ph26):f3)      ; H180x,N180x

  "DELTA = taua - 2.0u - p56 - d16"
   DELTA                                        ; dly 1/4JNH

  2u
  p56:gp6                                       ; gradient 6
  d16

  (center (pwh ph27):f1 (pwn ph29):f3)        ; H90(ph2),N90-y

  2u
  p57:gp7                                       ; gradient 7
  d16

  "DELTA = taua - 2.0u - p57 - d16 - (pwn-pwh)*0.5"               ; dly 1/4JNH
  DELTA

  (center (pwh*2 ph26):f1 (pwn*2 ph26):f3)      ; H180x,N180x

  "DELTA = taua - 2.0u - p57 - d16"               ; dly 1/4JNH
   DELTA
                                        ; dly 1/4JNH
  2u
  p57:gp7                                       ; gradient 7
  d16

  (pwh zero):f1                               ; H90x

  "DELTA = BigT1"
  DELTA

  (pwh*2 zero):f1                             ; H180x

  2u
  p58:gp8*EA                               ; gradient 8 coherence selection
  d16 
  2u pl31:f3                                   ; Set 15N decoupling power

  4u BLKGRAD                                    ; Blank gradients
 "DELTA = BigT1 - 2u - p58 - d16 - 2u - 4u + pwh*2.0/PI - de"
  DELTA

/* include an option for testing the amount of residual water */

/*

if "nsdone == 0"
  {
     d13;  set d13 to 2u acq is taken into account 
     d1
     (pwh*0.1 zero):f1   ; set rg = 8
   }
  else
   {
     d13
   }

*/

  ; Acquire data with 15N decoupling during AQ
  go=2 ph31 cpd3:f3
  d11 do:f3 mc #0 to 2 
  F1PH(calph(ph4, +90), caldel(d0, +in0)) 
  F2EA(calgrad(EA) & calph(ph7, +180) , calph(ph5, +180) & calph(ph31, +180) &  caldel(d10, +in10))

HaltAcqu, 1m
exit

ph1=0
ph2=1
ph3=0 2
ph4= 0 0 2 2
ph5=0
ph6=0 2
ph7=0
ph8=0 2
ph31=0 2 2 0
ph26=0 
ph27=1 
ph28=2 
ph29=3 

;pl1 : tpwr - power level for pwh
;pl12 : tpwrml - power level for 1H waltz16
;pl21 : dpwrco - power level for pwco90
;spw22 : dhpwrca - power level for pwca180
;pl22 : power level for pwco180
;pl23 : dpwrsed - power level for Ca seduce decoupling
;pl3 : dhpwr2 - power level for pwn
;pl31 : dpwr2 - power level for 15N cpd
;p1 : pwh
;p12 : pwmlev - 1H 90 for waltz16dec at power pl12
;p13 : pw_sl - water selective pulse, sel3
;p21 : pwco90 - CO 90 with B1=offset/sqrt(15)
;p22 : pwca180 - Ca 180 with B1=offset/sqrt(3)
;p23 : pwcadec - Ca seduce 90; total length of train 96*seduce pulse for sed
;p3 : pwn
;p31 : pwn at dpwr2 for decoupling
;sp13 : power level for pw_sl
;sp22 : power for pwca180 in middle of CO evolv
;d1 : relaxation delay
;d11 : delay for disk i/o, 30ms
;d13 : set to acq time for testing water
;d14 : BigT1 use 500 us
;d16 : gradient recovery delay, 200us
;d20 : taua - 2.4 ms or so
;d21 : zeta - around 12.4 ms N-CO transfer
;d22 bigTN - around 12.4 ms  N-Co back transfer
;cpd1: 1H decoupling according to program defined by cpdprg1 (waltz16)
;cpd2: cos modulated Ca decoupling according to program defined by cpdprg2 (seduce1)
;cpd3 : 15N decoupling according to program defined by cpdprg3 (waltz16)
;pcpd3: 1/dmf2 - 90 degree pulse for cpd3
;pcpd1 : pw90 for 1H decoupling pwmlev
;spnam13 : shape_sl; file for flip back
;spnam22 : File name for Ca 180 during t1 (D/sq(3) at offset of -118ppm)
;spnam23 : File name for Ca decoupling during CT-t2 acq
;pl10 : power level for 1H presat
;zgoptns : Df1180, Df2180, DF1c180, Dfsat, Dfscuba, DOneDarray
